`timescale 1ns / 1ps


module dff(
input clk,reset,D,load,load_data,
output reg Q);

always@(posedge clk or posedge reset)
begin
if(reset)
Q<=0;
else if(load)
Q<=load_data;
else
Q<=D;

end
endmodule

module pipo(
input clk,load,reset,
input [3:0]load_data,
input [3:0]D,
output Q0,Q1,Q2,Q3
 );
 

dff ff0(.clk(clk),.reset(reset),.D(D[0]),.load(load),.load_data(load_data[0]),.Q(Q0));
dff ff1(.clk(clk),.reset(reset),.D(D[1]),.load(load),.load_data(load_data[1]),.Q(Q2));
dff ff2(.clk(clk),.reset(reset),.D(D[2]),.load(load),.load_data(load_data[2]),.Q(Q2));
dff ff3(.clk(clk),.reset(reset),.D(D[3]),.load(load),.load_data(load_data[3]),.Q(Q3));


endmodule
