`timescale 1ns / 1ps

//////////////////////////////////////////////////////////////////////////////////

module dff(input D, clk, reset,load,load_data,output reg Q);

always@(posedge clk or posedge reset)
begin
if(reset)
Q<=0;
else if(load)
Q<=load_data;
else
Q<=D;

end
endmodule

module sync_down(input clk,reset,load,input [2:0]load_data,output wire[2:0]Q);

wire d0,d1,d2;
wire q0,q1,q2;

assign Q={q2,q1,q0};

assign d0=~q0;
assign d1=q0^(~q1);
assign d2=q2^(~q1 & ~q0);

dff ff0(.D(d0),.clk(clk),.reset(reset),.load(load),.load_data(load_data[0]),.Q(q0));
dff ff1(.D(d1),.clk(clk),.reset(reset),.load(load),.load_data(load_data[1]),.Q(q1));
dff ff2(.D(d2),.clk(clk),.reset(reset),.load(load),.load_data(load_data[2]),.Q(q2));

endmodule

