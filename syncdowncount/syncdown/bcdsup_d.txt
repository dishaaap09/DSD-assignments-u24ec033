
module ds (
  input wire clk,
  input wire rst,  /
  input wire d,
  output reg q
);
  always @(posedge clk) begin
    if (rst) q <= 1'b0;
    else      q <= d;
  end
endmodule



module bcd_sup (
  input wire clk,
  input wire rst,         // synchronous reset clears to 0
  output wire [3:0] q     // BCD output
);
  
  wire [3:0] d;
  wire at9 = q[3] & ~q[2] & ~q[1] & q[0]; 

  
  assign d = at9 ? 4'b0000 : q + 4'b0001;

  
  ds ff0 (.clk(clk), .rst(rst),       .d(d[0]), .q(q[0]));
  ds ff1 (.clk(clk), .rst(rst),       .d(d[1]), .q(q[1]));
  ds ff2 (.clk(clk), .rst(rst),       .d(d[2]), .q(q[2]));
  ds ff3 (.clk(clk), .rst(rst),       .d(d[3]), .q(q[3]));
endmodule
