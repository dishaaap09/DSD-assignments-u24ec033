// Code your design here

module rca_8bit_dataflow (
    input  [7:0] A,     
    input  [7:0] B,     
    input        Cin,   
    output [7:0] Sum,   
    output       Cout   
);

    wire [8:0] carry;   

    assign carry[0] = Cin;

   
    assign Sum[0] = A[0] ^ B[0] ^ carry[0];
    assign carry[1] = (A[0] & B[0]) | (A[0] & carry[0]) | (B[0] & carry[0]);

    assign Sum[1] = A[1] ^ B[1] ^ carry[1];
    assign carry[2] = (A[1] & B[1]) | (A[1] & carry[1]) | (B[1] & carry[1]);

    assign Sum[2] = A[2] ^ B[2] ^ carry[2];
    assign carry[3] = (A[2] & B[2]) | (A[2] & carry[2]) | (B[2] & carry[2]);

    assign Sum[3] = A[3] ^ B[3] ^ carry[3];
    assign carry[4] = (A[3] & B[3]) | (A[3] & carry[3]) | (B[3] & carry[3]);

    assign Sum[4] = A[4] ^ B[4] ^ carry[4];
    assign carry[5] = (A[4] & B[4]) | (A[4] & carry[4]) | (B[4] & carry[4]);

    assign Sum[5] = A[5] ^ B[5] ^ carry[5];
    assign carry[6] = (A[5] & B[5]) | (A[5] & carry[5]) | (B[5] & carry[5]);

    assign Sum[6] = A[6] ^ B[6] ^ carry[6];
    assign carry[7] = (A[6] & B[6]) | (A[6] & carry[6]) | (B[6] & carry[6]);

    assign Sum[7] = A[7] ^ B[7] ^ carry[7];
    assign carry[8] = (A[7] & B[7]) | (A[7] & carry[7]) | (B[7] & carry[7]);

    assign Cout = carry[8];

endmodule
