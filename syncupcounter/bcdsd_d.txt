module d_s (
  input wire clk,
  input wire rst,  
  input wire d,
  output reg q
);
  always @(posedge clk) begin
    if (rst) q <= 1'b0;
    else      q <= d;
  end
endmodule


module bcd_sd (
  input wire clk,
  input wire rst,
  output wire [3:0] q
);
  wire [3:0] d;
  assign q = q; 
  
  wire at0 = ~q[3] & ~q[2] & ~q[1] & ~q[0];
 
  assign d = at0 ? 4'b1001 : (q - 4'b0001);
  
  d_s ff0 (.clk(clk), .rst(rst), .d(d[0]), .q(q[0]));
  d_s ff1 (.clk(clk), .rst(rst), .d(d[1]), .q(q[1]));
  d_s ff2 (.clk(clk), .rst(rst), .d(d[2]), .q(q[2]));
  d_s ff3 (.clk(clk), .rst(rst), .d(d[3]), .q(q[3]));
  
endmodule
