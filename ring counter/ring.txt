`timescale 1ns / 1ps

module dff(
input D,clk,pre,clr,
output reg Q);

always@(posedge clk or posedge pre or posedge clr)
begin

if(pre)
Q<=1'b1;
else if(clr)
Q<=1'b0;
else
Q<=D;

end
endmodule


module ring(
input clk,ori,
output wire[3:0]Q
);

wire d0,d1,d2,d3;
wire q0,q1,q2,q3;

assign Q={q3,q2,q1,q0};

assign d0=q3;
assign d1=q0;
assign d2=q1;
assign d3=q2;

wire pre0,pre1,pre2,pre3;
wire clr0,clr1,clr2,clr3;

assign pre0=ori;
assign pre1=1'b0;
assign pre2=1'b0;
assign pre3=1'b0;

assign clr0=1'b0;
assign clr1=ori;
assign clr2=ori;
assign clr3=ori;


dff ff0(.D(d0),.clk(clk),.pre(pre0),.clr(clr0),.Q(q0));
dff ff1(.D(d1),.clk(clk),.pre(pre1),.clr(clr1),.Q(q1));
dff ff2(.D(d2),.clk(clk),.pre(pre2),.clr(clr2),.Q(q2));
dff ff3(.D(d3),.clk(clk),.pre(pre3),.clr(clr3),.Q(q3));


endmodule
